name: Build and deploy - gromm-api

on:
  push:
    branches:
      - staging
  workflow_dispatch:

env:
  KUBE_NAMESPACE: vchain-staging
  BRANCH: staging
  DEPLOYMENT_NAME: gromm-api

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
        - name: Check out the repository
          uses: actions/checkout@v3
  
        - name: Log in to GitHub Container Registry
          uses: docker/login-action@v2
          with:
            registry: ghcr.io
            username: ${{ github.repository_owner }}
            password: ${{ secrets.GHCR_PAT }}
  
        - name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v2
  
        - name: Build and push Docker image
          uses: docker/build-push-action@v3
          with:
            context: .
            file: ./Dockerfile
            push: true
            tags: ghcr.io/thierryfb/gromm:staging
            build-args: |
              THOR_URL=${{ vars.THOR_URL }}
  
        - name: Output image digest
          run: echo "The image digest is ${{ steps.build-and-push.outputs.digest }}"

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:

      - name: Decode and set KUBECONFIG
        run: |
          mkdir -p $HOME/.kube
          echo "${{ secrets.KUBE_CONFIG }}" | base64 -d > $HOME/.kube/config

      - name: Create or Replace Docker Registry Secret
        run: |
          kubectl create secret docker-registry ghcr-registry \
          --docker-server=${{ vars.DOCKER_SERVER }} \
          --docker-username=${{ vars.DOCKER_USERNAME }} \
          --docker-email=${{ vars.DOCKER_EMAIL }} \
          --docker-password=${{ secrets.GHCR_PAT }} \
          --namespace=$KUBE_NAMESPACE \
          -o yaml --dry-run=client | kubectl replace --force -f -

      - name: Deploy API to DOKS
        run: |
          kubectl -n $KUBE_NAMESPACE rollout restart deployment/$DEPLOYMENT_NAME
          kubectl -n $KUBE_NAMESPACE rollout status deployment/$DEPLOYMENT_NAME